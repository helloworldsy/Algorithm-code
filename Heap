//simple heap implement
#include<cstdio>
#include<iostream>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<time.h>
#include<vector>
#include<set>
#include<string>
#include<map>
#include<stack>
#include<queue>
#include<utility>
using namespace std;
int const maxn=110;
int n;
int heap[maxn];
void downAdjust(int low,int high){
    int i=low,j=2*i;
    while(j<=high){
        if(j+1<=high&&heap[j+1]>heap[j]){
            j=j+1;
        }
        if(heap[j]>heap[i]){
            swap(heap[i],heap[j]);
            i=j;
            j=2*i;
        }else break;
    }
}
void createHeap(){
    for(int i=2/n;i>=1;i--){
        downAdjust(i,n);
    }
}
void deleteTop(){
    heap[1]=heap[n--];
    downAdjust(1,n);
}
void upAdjust(int low,int high){
    int i=high,j=i/2;
    while(i>=low){
        if(heap[i]>heap[j]){
            swap(heap[i],heap[j]);
            i=j;
            j=i/2;
        }else break;
    }
}
void Insert(int x){
    heap[++n]=x;
    upAdjust(1,n);
}
void heapSort(){
    createHeap();
    for(int i=n;i>1;i--){
        swap(heap[1],heap[i]);
        downAdjust(1,i-1);
    }
}
